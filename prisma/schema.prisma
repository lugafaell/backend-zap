generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  botNumber   String?       @unique
  createdAt   DateTime      @default(now())
  contacts    Contact[]
  messages    Message[]
  logs        ActivityLog[]
  botSettings BotSettings[]
}

model Contact {
  id           String       @id @default(cuid())
  phoneNumber  String
  name         String?
  createdAt    DateTime     @default(now())
  user         User         @relation(fields: [userId], references: [id])
  userId       Int
  messages     Message[]
  logs         ActivityLog[]
}

model Message {
  id         String     @id @default(cuid())
  contactId  String
  contact    Contact    @relation(fields: [contactId], references: [id])
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  sender     SenderType
  content    String
  timestamp  DateTime   @default(now())
}

model ActivityLog {
  id         String       @id @default(cuid())
  contactId  String?
  contact    Contact?     @relation(fields: [contactId], references: [id])
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  actionType ActionType
  message    String
  timestamp  DateTime     @default(now())
}

model BotSettings {
  id           String   @id @default(cuid())
  personality  String   @default("divertido")
  language     String   @default("pt")
  autoJokes    Boolean  @default(true)
  autoTime     Boolean  @default(true)
  autoGreeting Boolean  @default(true)
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
}

enum SenderType {
  USER
  BOT
}

enum ActionType {
  SENT_MESSAGE
  RECEIVED_MESSAGE
  AUTO_REPLY
  BOT_MESSAGE
}